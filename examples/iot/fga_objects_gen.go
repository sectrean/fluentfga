// Code generated by fluentfga. DO NOT EDIT.
package fga

import (
	"fmt"
)

type Object interface {
	typeName() string
	id() string
	String() string
}

type Userset interface {
	Object
	Relation
}

// User represents an object of the "user" type.
type User struct {
	UserID string
}

func (User) typeName() string { return "user" }
func (u User) id() string     { return fmt.Sprint(u.UserID) }
func (u User) String() string { return fmt.Sprint("user:", u.UserID) }

// Device represents an object of the "device" type.
type Device struct {
	DeviceID string
}

func (Device) typeName() string { return "device" }
func (d Device) id() string     { return fmt.Sprint(d.DeviceID) }
func (d Device) String() string { return fmt.Sprint("device:", d.DeviceID) }

// DeviceGroup represents an object of the "device_group" type.
type DeviceGroup struct {
	DeviceGroupID string
}

func (DeviceGroup) typeName() string { return "device_group" }
func (d DeviceGroup) id() string     { return fmt.Sprint(d.DeviceGroupID) }
func (d DeviceGroup) String() string { return fmt.Sprint("device_group:", d.DeviceGroupID) }

// DeviceGroupItAdminUserset is the "device_group:{DeviceGroupID}#it_admin" userset.
type DeviceGroupItAdminUserset struct {
	DeviceGroup
}

func (DeviceGroupItAdminUserset) relation() string { return "it_admin" }
func (u DeviceGroupItAdminUserset) String() string {
	return fmt.Sprint("device_group:", u.id(), "#it_admin")
}

// DeviceGroupUserset returns the "device_group:{DeviceGroupID}#it_admin" userset.
func (d DeviceGroup) ItAdminUserset() DeviceGroupItAdminUserset {
	return DeviceGroupItAdminUserset{d}
}

// DeviceGroupSecurityGuardUserset is the "device_group:{DeviceGroupID}#security_guard" userset.
type DeviceGroupSecurityGuardUserset struct {
	DeviceGroup
}

func (DeviceGroupSecurityGuardUserset) relation() string { return "security_guard" }
func (u DeviceGroupSecurityGuardUserset) String() string {
	return fmt.Sprint("device_group:", u.id(), "#security_guard")
}

// DeviceGroupUserset returns the "device_group:{DeviceGroupID}#security_guard" userset.
func (d DeviceGroup) SecurityGuardUserset() DeviceGroupSecurityGuardUserset {
	return DeviceGroupSecurityGuardUserset{d}
}
