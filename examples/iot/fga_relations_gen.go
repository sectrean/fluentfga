// Code generated by fluentfga. DO NOT EDIT.
package model

import (
	fluentfga "github.com/sectrean/fluentfga"
)

// DeviceDeviceRenamerRelation represents the "device#device_renamer" relation.
var DeviceDeviceRenamerRelation deviceDeviceRenamerRelation

type deviceDeviceRenamerRelation struct{}

func (deviceDeviceRenamerRelation) FgaType() string   { return "device" }
func (deviceDeviceRenamerRelation) Relation() string  { return "device_renamer" }
func (deviceDeviceRenamerRelation) String() string    { return "device#device_renamer" }
func (deviceDeviceRenamerRelation) ObjectType(Device) {}

// DeviceItAdminRelation represents the "device#it_admin" relation.
var DeviceItAdminRelation deviceItAdminRelation

type deviceItAdminRelation struct{}

func (deviceItAdminRelation) FgaType() string   { return "device" }
func (deviceItAdminRelation) Relation() string  { return "it_admin" }
func (deviceItAdminRelation) String() string    { return "device#it_admin" }
func (deviceItAdminRelation) ObjectType(Device) {}

func (r deviceItAdminRelation) NewTuple(user DeviceItAdminUser, object Device) fluentfga.Tuple {
	return fluentfga.NewTuple(user, r, object)
}

// DeviceItAdminUser represents the direct user types for the "device#it_admin" relation.
//
// It is a union of the following types:
//   - User
//   - DeviceGroupItAdminUserset
type DeviceItAdminUser interface {
	fluentfga.Object
	deviceItAdminUser()
}

func (User) deviceItAdminUser()                      {}
func (DeviceGroupItAdminUserset) deviceItAdminUser() {}

// DeviceLiveVideoViewerRelation represents the "device#live_video_viewer" relation.
var DeviceLiveVideoViewerRelation deviceLiveVideoViewerRelation

type deviceLiveVideoViewerRelation struct{}

func (deviceLiveVideoViewerRelation) FgaType() string   { return "device" }
func (deviceLiveVideoViewerRelation) Relation() string  { return "live_video_viewer" }
func (deviceLiveVideoViewerRelation) String() string    { return "device#live_video_viewer" }
func (deviceLiveVideoViewerRelation) ObjectType(Device) {}

// DeviceRecordedVideoViewerRelation represents the "device#recorded_video_viewer" relation.
var DeviceRecordedVideoViewerRelation deviceRecordedVideoViewerRelation

type deviceRecordedVideoViewerRelation struct{}

func (deviceRecordedVideoViewerRelation) FgaType() string   { return "device" }
func (deviceRecordedVideoViewerRelation) Relation() string  { return "recorded_video_viewer" }
func (deviceRecordedVideoViewerRelation) String() string    { return "device#recorded_video_viewer" }
func (deviceRecordedVideoViewerRelation) ObjectType(Device) {}

// DeviceSecurityGuardRelation represents the "device#security_guard" relation.
var DeviceSecurityGuardRelation deviceSecurityGuardRelation

type deviceSecurityGuardRelation struct{}

func (deviceSecurityGuardRelation) FgaType() string   { return "device" }
func (deviceSecurityGuardRelation) Relation() string  { return "security_guard" }
func (deviceSecurityGuardRelation) String() string    { return "device#security_guard" }
func (deviceSecurityGuardRelation) ObjectType(Device) {}

func (r deviceSecurityGuardRelation) NewTuple(user DeviceSecurityGuardUser, object Device) fluentfga.Tuple {
	return fluentfga.NewTuple(user, r, object)
}

// DeviceSecurityGuardUser represents the direct user types for the "device#security_guard" relation.
//
// It is a union of the following types:
//   - User
//   - DeviceGroupSecurityGuardUserset
type DeviceSecurityGuardUser interface {
	fluentfga.Object
	deviceSecurityGuardUser()
}

func (User) deviceSecurityGuardUser()                            {}
func (DeviceGroupSecurityGuardUserset) deviceSecurityGuardUser() {}

// DeviceGroupItAdminRelation represents the "device_group#it_admin" relation.
var DeviceGroupItAdminRelation deviceGroupItAdminRelation

type deviceGroupItAdminRelation struct{}

func (deviceGroupItAdminRelation) FgaType() string        { return "device_group" }
func (deviceGroupItAdminRelation) Relation() string       { return "it_admin" }
func (deviceGroupItAdminRelation) String() string         { return "device_group#it_admin" }
func (deviceGroupItAdminRelation) ObjectType(DeviceGroup) {}

func (r deviceGroupItAdminRelation) NewTuple(user User, object DeviceGroup) fluentfga.Tuple {
	return fluentfga.NewTuple(user, r, object)
}

// DeviceGroupSecurityGuardRelation represents the "device_group#security_guard" relation.
var DeviceGroupSecurityGuardRelation deviceGroupSecurityGuardRelation

type deviceGroupSecurityGuardRelation struct{}

func (deviceGroupSecurityGuardRelation) FgaType() string        { return "device_group" }
func (deviceGroupSecurityGuardRelation) Relation() string       { return "security_guard" }
func (deviceGroupSecurityGuardRelation) String() string         { return "device_group#security_guard" }
func (deviceGroupSecurityGuardRelation) ObjectType(DeviceGroup) {}

func (r deviceGroupSecurityGuardRelation) NewTuple(user User, object DeviceGroup) fluentfga.Tuple {
	return fluentfga.NewTuple(user, r, object)
}
