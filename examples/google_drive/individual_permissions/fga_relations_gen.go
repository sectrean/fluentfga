// Code generated by fluentfga. DO NOT EDIT.
package fga

import "context"

type Object interface {
	object() string
	id() string
	String() string
}

type Relation interface {
	object() string
	relation() string
}

type Userset interface {
	Object
	Relation
}

type DirectRelation[U Object, O Object] struct {
	model *AuthorizationModel

	rel string
	obj string
}

func (r DirectRelation[U, O]) relation() string { return r.rel }
func (r DirectRelation[U, O]) object() string   { return r.obj }

func (r DirectRelation[U, O]) Check(ctx context.Context, user U, object O) (bool, error) {
	return r.model.check(ctx, user, r, object)
}

func (r DirectRelation[U, O]) Write(ctx context.Context, user U, object O) error {
	return r.model.write(ctx, user, r, object)
}

func (r DirectRelation[U, O]) Delete(ctx context.Context, user U, object O) error {
	return r.model.delete(ctx, user, r, object)
}
